geom_text(aes(x = project_subject_subcategories, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'project_subject_subcategories',
y = 'Count'
) + coord_flip() +
theme_light()
join_train %>%
group_by(project_subject_subcategories) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(project_subject_subcategories = reorder(project_subject_subcategories,Count)) %>%
head(10) %>%
ggplot(aes(x = project_subject_subcategories,y = Count)) +
geom_bar(stat='identity',colour="white",fill = "blue") +
geom_text(aes(x = project_subject_subcategories, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'project_subject_subcategories',
y = 'Count'
) + coord_flip() +
theme_light()
join_train %>%
group_by(project_subject_subcategories) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(project_subject_subcategories = reorder(project_subject_subcategories,Count)) %>%
head(10) %>%
ggplot(aes(x = project_subject_subcategories,y = Count)) +
geom_bar(stat='identity',colour="white",fill = "light blue") +
geom_text(aes(x = project_subject_subcategories, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'project_subject_subcategories',
y = 'Count'
) + coord_flip() +
theme_light()
x<- data.frame(table(train$project_grade_category[train$project_is_approved == "1"]) )
k<- data.frame(table(train$project_grade_category))
proj_grade <- merge(x,k,by = "Var1")
Project_Grades <- proj_grade$Var1
text <- round( (proj_grade$Freq.x/ proj_grade$Freq.y)*100,digits = 2)
text <- paste(text, "%Accepted" )
data <- data.frame(Project_Grades, proj_grade$Freq.x, proj_grade$Freq.y - proj_grade$Freq.x)
p <- plot_ly(data, x = ~Project_Grades, y = ~proj_grade$Freq.x, type = 'bar', text = text ,name = 'Accepted') %>%
add_trace(y = ~proj_grade$Freq.y - proj_grade$Freq.x, name = 'Not Accepted') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
summary(train)
summary(test)
summary(resources)
summary(sample_submission)
head(train)
head(test)
head(resources)
head(sample_submission)
head(train)
head(resources)
glimpse(train)
dim(train)
perc_approved <- sum(train$project_is_approved/length(train$project_is_approved))*100
perc_approved
dim(train)
p1 <- train %>%
count(teacher_id) %>%
ggplot(aes(n)) +
geom_bar(fill = "Dark Green") +
scale_y_log10() +
labs(x = "Number of Proposals per Teacher ID") +
ggtitle("Teacher Characteristics")
p1
vis_1<-table(train$teacher_prefix,train$project_is_approved)
#print(vis_1)
d_vis_1<-as.data.frame(vis_1)
print(d_vis_1)
library(ggplot2)
p<-ggplot(d_vis_1, aes(x=Var1,y=Freq,fill=Var2)) +
geom_bar(position="dodge",stat='identity') + coord_flip()
print(p)
vis_2<-table(train$project_grade_category,train$project_is_approved)
d_vis_2<-as.data.frame(vis_2)
d_vis_2<-subset(d_vis_2,Var2==0)
#print(d_vis_2)
library(ggplot2)
d_vis_2$Var1 <- factor(d_vis_2$Var1, levels = d_vis_2$Var1[order(-d_vis_2$Freq)])
p<-ggplot(d_vis_2, aes(x=Var1,y=Freq,fill=Var1)) +
geom_bar(stat='identity') +theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(p)
x<- data.frame(table(train$project_grade_category[train$project_is_approved == "1"]) )
k<- data.frame(table(train$project_grade_category))
proj_grade <- merge(x,k,by = "Var1")
Project_Grades <- proj_grade$Var1
text <- round( (proj_grade$Freq.x/ proj_grade$Freq.y)*100,digits = 2)
text <- paste(text, "%Accepted" )
data <- data.frame(Project_Grades, proj_grade$Freq.x, proj_grade$Freq.y - proj_grade$Freq.x)
p <- plot_ly(data, x = ~Project_Grades, y = ~proj_grade$Freq.x, type = 'bar', text = text ,name = 'Accepted') %>%
add_trace(y = ~proj_grade$Freq.y - proj_grade$Freq.x, name = 'Not Accepted') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
join_train <- merge(train,resources,by = "id")
approved_data <-subset(join_train,project_is_approved==1)
non_approved_data <-subset(join_train,project_is_approved==0)
ggplot() + geom_density(aes(x=log(teacher_number_of_previously_posted_projects)), colour="red", data=approved_data) +
geom_density(aes(x=log(teacher_number_of_previously_posted_projects)), colour="blue", data=non_approved_data)
ggplot() + geom_density(aes(x=log(price)), colour="red", data=approved_data) +
geom_density(aes(x=log(price)), colour="blue", data=non_approved_data)
ggplot() + geom_density(aes(x=log(quantity)), colour="red", data=approved_data) +
geom_density(aes(x=log(quantity)), colour="blue", data=non_approved_data)
join_train %>%
group_by(project_subject_categories) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(project_subject_categories = reorder(project_subject_categories,Count)) %>%
head(10) %>%
ggplot(aes(x = project_subject_categories,y = Count)) +
geom_bar(stat='identity',colour="white",fill = "orange") +
geom_text(aes(x = project_subject_categories, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'project_subject_categories',
y = 'Count'
) + coord_flip() +
theme_light()
join_train %>%
group_by(project_subject_subcategories) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(project_subject_subcategories = reorder(project_subject_subcategories,Count)) %>%
head(10) %>%
ggplot(aes(x = project_subject_subcategories,y = Count)) +
geom_bar(stat='identity',colour="white",fill = "light blue") +
geom_text(aes(x = project_subject_subcategories, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'project_subject_subcategories',
y = 'Count'
) + coord_flip() +
theme_light()
ggplot(full3, aes(x = (teacher_number_of_previously_posted_projects), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("Density Plot of PresentExperience related to Attrition")
ggplot(join_train, aes(x = (teacher_number_of_previously_posted_projects), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("Density Plot of PresentExperience related to Attrition")
ggplot(join_train, aes(x = log(teacher_number_of_previously_posted_projects), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("Density Plot of PresentExperience related to Attrition")
ggplot(join_train, aes(x = log10(teacher_number_of_previously_posted_projects), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("Density Plot of PresentExperience related to Attrition")
setwd(tempdir())
## capture messages and errors to a file.
zz <- file("all.Rout", open="wt")
sink(zz, type="message")
try(log("a"))
## reset message sink and close the file connection
sink(type="message")
close(zz)
join_train$project_subject_subcategories
setwd(tempdir())
## capture messages and errors to a file.
zz <- file("all.Rout", open="wt")
sink(zz, type="message")
try(log("a"))
## reset message sink and close the file connection
sink(type="message")
close(zz)
readLines("all.Rout")
setwd(tempdir())
## capture messages and errors to a file.
zz <- file("D:\", open="wt")
sink(zz, type="message")
try(log("a"))
## reset message sink and close the file connection
sink(type="message")
close(zz)
readLines("all.Rout")
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
head(df)
df <- train
df$hover <- with(df, paste(school_state, '<br>', "project_is_approved", project_is_approved))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Project_Grades, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Project_Grades, text = ~hover, locations = ~school_state,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Project_Grades, text = ~hover, locations = ~school_state,
color = ~Project_Grades, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
df <- join_train
df$hover <- with(df, paste(school_state, '<br>', "project_is_approved", project_is_approved))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~Project_Grades, text = ~hover, locations = ~school_state,
color = ~price, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~quantity, text = ~hover, locations = ~school_state,
color = ~price, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df <- join_train
df$hover <- with(df, paste(school_state, '<br>', "project_is_approved", project_is_approved))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~price, text = ~hover, locations = ~school_state,
color = ~price, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = 'Project proposals in U.S)',
geo = g
)
p
train$Gender <- "Male"
train$Gender [ if_else(train$teacher_prefix == "Ms."|train$teacher_prefix == "Mrs.")] <- "Female"
train$Gender <- "Male"
train$Gender [ if_else(train$teacher_prefix == "Ms."|train$teacher_prefix == "Mrs."),] <- "Female"
train$Gender <- "Male"
train$Gender [ train$Gende(train$teacher_prefix == "Ms."|train$teacher_prefix == "Mrs."),] <- "Female"
train$Gender <- "Male"
train$Gender [ train$Gender(train$teacher_prefix == "Ms."|train$teacher_prefix == "Mrs."),] <- "Female"
train$Gender <- "Male"
train$Gender [ train$Gender(train$teacher_prefix == "Ms."|train$teacher_prefix == "Mrs.")] <- "Female"
table(train$teacher_prefix)
train$Gender <- "Unknown"
train$Gender [ if_else(train$teacher_prefix == "Ms."|train$teacher_prefix == "Mrs."),"Female","Male"]
x<- colMeans(is.na(train) )
distribution<- x[x>0]
t<-data.frame(distribution)
colnames(t) <- "Percentage"
require('DT')
d = data.frame(
t,
stringsAsFactors = TRUE
)
dt <- datatable(d, filter = 'bottom', options = list(pageLength = 5))
dt
table(train$Gender)
train$Gender <- "Unknown"
train$Gender [(train$teacher_prefix == "Ms."|train$teacher_prefix == "Mrs.")]  <- "Female"
train$Gender [(train$teacher_prefix == "Mr.")]  <- "Male"
table(train$Gender)
x<- data.frame(table(train$Gender[train$project_is_approved == "1"]) )
k<- data.frame(table(train$Gender))
gender <- merge(x,k,by = "Var1")
Gender <- gender$Var1
text <- round( (gender$Freq.x/ gender$Freq.y)*100,digits = 2)
text <- paste(text, "%Accepted" )
data <- data.frame(Gender, gender$Freq.x, gender$Freq.y - gender$Freq.x)
p <- plot_ly(data, x = ~Gender, y = ~gender$Freq.x, type = 'bar', text = text ,name = 'Accepted') %>%
add_trace(y = ~gender$Freq.y - gender$Freq.x, name = 'Not Accepted') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
train %>%
count(sub_sub) %>%
top_n(10, n) %>%
ggplot(aes(reorder(sub_sub, n, FUN = min), n, fill = sub_sub)) +
geom_col() +
labs(x = "Subject Sub-Categories") +
coord_flip() +
theme(legend.position = "none")
train %>%
count(sub_sub) %>%
top_n(10, n) %>%
ggplot(aes(reorder(Gender, n, FUN = min), n, fill = Gender)) +
geom_col() +
labs(x = "Subject Sub-Categories") +
coord_flip() +
theme(legend.position = "none")
train %>%
count(Gender) %>%
top_n(10, n) %>%
ggplot(aes(reorder(Gender, n, FUN = min), n, fill = Gender)) +
geom_col() +
labs(x = "Subject Sub-Categories") +
coord_flip() +
theme(legend.position = "none")
train %>%
count(Gender) %>%
top_n(10, n) %>%
ggplot(aes(reorder(Gender, n, FUN = min), n, fill = Gender)) +
geom_col() +
labs(x = "Subject Sub-Categories") +
theme(legend.position = "none")
train %>%
ggplot(aes(teacher_number_of_previously_posted_projects)) +
geom_histogram(bins = 100, fill = "darkgreen") +
labs(x = "Number of previous Proposals per Teacher ID") +
scale_y_log10()
p1 <- train %>%
count(teacher_number_of_previously_posted_projects) %>%
ggplot(aes(n)) +
geom_bar(fill = "Dark Green") +
scale_y_log10() +
labs(x = "Number of Proposals per Teacher ID") +
ggtitle("Teacher Characteristics")
p1
train %>%
ggplot(aes(teacher_number_of_previously_posted_projects)) +
geom_histogram(bins = 100, fill = "Light red") +
labs(x = "Number of previous Proposals per Teacher ID") +
scale_y_log10()
train %>%
ggplot(aes(teacher_number_of_previously_posted_projects)) +
geom_histogram(bins = 100, fill = "Red") +
labs(x = "Number of previous Proposals per Teacher ID") +
scale_y_log10()
train %>%
count(teacher_number_of_previously_posted_projects, target) %>%
ggplot(aes(n, fill = target)) +
geom_density(alpha = 0.5, bw = 0.2) +
scale_x_log10() +
labs(x = "Number of Previous Proposals")
ggplot(join_train, aes(x = log10(teacher_number_of_previously_posted_projects), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("Density Plot of PresentExperience related to Attrition")
ggplot(join_train, aes(x = (teacher_number_of_previously_posted_projects), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("Density Plot of PresentExperience related to Attrition")
ggplot(join_train, aes(x = log10(teacher_number_of_previously_posted_projects), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("Density Plot of PresentExperience related to Attrition")
ggplot(join_train, aes(x = count(teacher_number_of_previously_posted_projects), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("Density Plot of PresentExperience related to Attrition")
ggplot(join_train, aes(x = log10(teacher_number_of_previously_posted_projects), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("Density Plot of PresentExperience related to Attrition")
join_train %>%
ggplot(aes(price)) +
geom_histogram(bins = 100, fill = "Red") +
labs(x = "Number of previous Proposals per Teacher ID") +
scale_y_log10()
join_train %>%
ggplot(aes(price)) +
geom_histogram(bins = 100, fill = "Blue") +
labs(x = "Price of resources") +
scale_y_log10()
p1 <- train %>%
count(teacher_number_of_previously_posted_projects) %>%
ggplot(aes(n)) +
geom_bar(fill = "Dark Green") +
scale_y_log10() +
labs(x = "Number of Proposals per Teacher ID") +
ggtitle("Teacher Characteristics")
p1
ggplot(join_train, aes(x = log10(price), fill = as.factor(project_is_approved))) +
geom_density(alpha = 0.4)  +
ggtitle("")
summary(join_train$price)
x<- data.frame(table(train$project_subject_categories[train$project_is_approved == "1"]) )
k<- data.frame(table(train$project_subject_categories))
proj_grade <- merge(x,k,by = "Var1")
Project_Grades <- proj_grade$Var1
text <- round( (proj_grade$Freq.x/ proj_grade$Freq.y)*100,digits = 2)
text <- paste(text, "%Accepted" )
data <- data.frame(Project_Grades, proj_grade$Freq.x, proj_grade$Freq.y - proj_grade$Freq.x)
p <- plot_ly(data, x = ~Project_Grades, y = ~proj_grade$Freq.x, type = 'bar', text = text ,name = 'Accepted') %>%
add_trace(y = ~proj_grade$Freq.y - proj_grade$Freq.x, name = 'Not Accepted') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
x<- data.frame(table(train$project_subject_categories[train$project_is_approved == "1"]) )
k<- data.frame(table(train$project_subject_categories))
project_subject <- merge(x,k,by = "Var1")
project_Subject <- project_subject$Var1
text <- round( (project_subject$Freq.x/ project_subject$Freq.y)*100,digits = 2)
text <- paste(text, "%Accepted" )
data <- data.frame(project_Subject, project_subject$Freq.x, project_subject$Freq.y - project_subject$Freq.x)
p <- plot_ly(data, x = ~project_Subject, y = ~project_subject$Freq.x, type = 'bar', text = text ,name = 'Accepted') %>%
add_trace(y = ~project_subject$Freq.y - project_subject$Freq.x, name = 'Not Accepted') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
x<- data.frame(table(train$project_subject_categories[train$project_is_approved == "1"]) )
k<- data.frame(table(train$project_subject_categories))
project_subject <- merge(x,k,by = "Var1")
project_Subject <- project_subject$Var1
text <- round( (project_subject$Freq.x/ project_subject$Freq.y)*100,digits = 2)
text <- paste(text, "%Accepted" )
data <- data.frame(project_Subject, project_subject$Freq.x, project_subject$Freq.y - project_subject$Freq.x)
p <- plot_ly(data, x = ~project_Subject, y = ~project_subject$Freq.x, type = 'bar', text = text ,name = 'Accepted') %>%
add_trace(y = ~project_subject$Freq.y - project_subject$Freq.x, name = 'Not Accepted') %>%
layout(margin = list(b = 160),yaxis = list(title = 'Count'), barmode = 'stack')
p
x<- data.frame(table(train$project_subject_subcategories[train$project_is_approved == "1"]) )
k<- data.frame(table(train$project_subject_subcategories))
project_subject <- merge(x,k,by = "Var1")
project_Subject <- project_subject$Var1
text <- round( (project_subject$Freq.x/ project_subject$Freq.y)*100,digits = 2)
text <- paste(text, "%Accepted" )
data <- data.frame(project_Subject, project_subject$Freq.x, project_subject$Freq.y - project_subject$Freq.x)
p <- plot_ly(data, x = ~project_Subject, y = ~project_subject$Freq.x, type = 'bar', text = text ,name = 'Accepted') %>%
add_trace(y = ~project_subject$Freq.y - project_subject$Freq.x, name = 'Not Accepted') %>%
layout(margin = list(b = 160),yaxis = list(title = 'Count'), barmode = 'stack')
p
head(train)
head(resources)
